@model Purchase.System.DTO.ProductMasterDTO

@{
    ViewBag.Title = "AddUpdateProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("AddUpdateProduct","Product"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.ProductMst.fk_producttypeid, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductMst.fk_producttypeid, new SelectList(Model.ProductMasList, "pk_propertyId", "Description", 0), "---Select Product---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductMst.fk_producttypeid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductMst.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductMst.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductMst.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductMst.OriginalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductMst.OriginalPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductMst.OriginalPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductMst.SellingUpToPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductMst.SellingUpToPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductMst.SellingUpToPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductMst.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductMst.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductMst.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(X => X.ProductMst.pk_ProductId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ProductList")
</div>
